:root {
    --color1: #e6e6e6;  /* 基本の背景色として設定された明るい青色です。全体のデザインに統一感を与えるために使用します。 */
    --color2: #aa003e;  /* アクセントとして使用する濃い青色です。強調したいテキストやボタンに用いられます。 */
    --color3: #111111;  /* 主にテキストに使用される非常に濃いグレー（ほぼ黒）色です。読みやすさを確保するために使います。 */
    --color4: #ffffff;  /* ライトカラーとしての白色です。背景やテキストのコントラストを高めるために使用します。 */
    --pagewidth: 1000px; /* コンテンツの最大幅を設定するカスタムプロパティです。全体のレイアウトに一貫性を持たせるために使用します。 */
}
  
html {
    scroll-behavior: smooth; /* リンクをクリックした際にスムーズにスクロールするように設定します。 */
}
  
body {
    font-family: sans-serif; /* ウェブページ全体のフォントをサンセリフに設定します。これはモダンで読みやすいフォントスタイルです。 */
    color: var(--color3); /* テキストの色をカスタムプロパティで設定したダークカラーに指定します。 */
    line-height: 1.5; /* テキストの行間を1.5に設定して、読みやすくします。 */
    background-color: var(--color1); /* ページ全体の背景色をカスタムプロパティで設定した基本色にします。 */
    font-family: "Noto Sans JP", sans-serif;
}
  
header {
    padding-bottom: 16px; /* ヘッダーの下に16ピクセルのパディング（内側の余白の幅）を追加します。 */
    padding-top: 16px; /* ヘッダーの上に16ピクセルのパディング（内側の余白の幅）を追加します。 */
    background: linear-gradient(135deg, #aa003e 0, #6b0027 100%);
}

.navitem{
    color: #fff;
}

.navitem:hover{
    font-weight: bold;
}

h1{
    color: var(--color2);
    font-size: 24px;
    font-weight: bold;

}

h2{
    color: var(--color3);
    font-size: 20px;
    font-weight: 700;
}

h3{
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 20px;
}

h4{
    font-size: 20px;
    color: var(--color4);
    text-align: center;
    font-weight: bold;
}

h5{
    font-size: 8px;
    color: var(--color4);
    text-align: center;
    font-weight: bold;
}


p{
    color: var(--color3);
    margin-top: 20px;
    font-size: 12px;
    line-height: 24px;
}
.container {
    width: 90%; /* コンテナの幅を全体の90%に設定します。 */
    max-width: var(--pagewidth); /* コンテナの最大幅をカスタムプロパティで設定したページ幅に制限します。 */
    margin: 0 auto; /* 左右のマージン（外側の余白の幅）を自動に設定して中央寄せにします。 */
}

header .container {
    display: flex; /* ヘッダー内のコンテナにFlexboxを適用して、要素を柔軟に配置します。 */
    justify-content: space-between; /* 子要素を均等に分散配置します（左端と右端に寄せます）。 */
    flex-wrap: wrap; /* コンテナの幅が狭くなった場合に要素を折り返します。 */
    text-align: center; /* テキストを中央揃えにします。 */
}

header .container ul {
    display: flex; /* ナビゲーションリストにFlexboxを適用して横並びにします。 */
    justify-content: space-between; /* リストアイテムを均等に分散配置します。 */
    flex-wrap: wrap; /* 幅が狭いときにリストアイテムを折り返し可能にします。 */
}

header .container ul li {
    margin-right: 12px; /* 各リストアイテムの右に12ピクセルのマージン（外側の余白の幅）を設定します。これはナビゲーションアイテム間のスペースを確保するためです。 */
}

button {
    padding: 16px; /* ボタン内のテキスト周囲に16ピクセルのパディング（内側の余白の幅）を設定します。 */
    background-color: var(--color2); /* ボタンの背景色をカスタムプロパティから取得した濃い青色で設定します。 */
    display: inline-block; /* ボタンをインラインブロック要素として表示し、テキストの流れの中でブロックのように扱います。 */
    margin: 8px; /* ボタンの周囲に8ピクセルのマージンを設定し、他の要素からの間隔を確保します。 */
    color: var(--color4); /* ボタンのテキスト色をカスタムプロパティから取得した白色で設定します。 */
    border-radius: 32px; /* ボタンの角を32ピクセルの半径で丸くします。これにより視覚的に柔らかな印象を与えます。 */
    font-weight: bold; /* ボタンのテキストを太字に設定し、強調表示します。 */
    font-size: 16px;
}

button:hover {
    background-color: var(--color4); /* マウスカーソルがボタン上にある時、背景色を白色に変更します。 */
    color: var(--color2); /* マウスカーソルがボタン上にある時、テキスト色を濃い青色に変更します。これによりボタンの見た目が反転し、インタラクティブな感じを演出します。 */
}



section {
    margin-bottom: 48px; /* 各セクションの下部に48ピクセルのマージンを設定し、次のセクションとの間に適切なスペースを確保します。 */
}

.row {
    display: flex; /* 行にFlexboxを適用して子要素を横並びにします。 */
    justify-content: space-between; /* 子要素を親要素内で均等に分散配置します。 */
    flex-wrap: wrap; /* 行の幅が狭いときに要素を折り返し可能にします。 */
}

.col {
    min-height: 320px; 
    padding: 16px; /* カラム内にある内側の余白の幅を設定します。 */
}

.col p {
    font-size: 12px; /* カラム内の段落（テキスト）のフォントサイズを12ピクセルに設定します。これは比較的小さいサイズで、注釈や補足情報に適しています。 */
    color: #555; /* カラム内の段落（テキスト）のテキスト色を中間のグレーに設定し、主テキストよりも控えめな視覚的印象を与えます。 */
}

.center {
    text-align: center; /* テキストを中央揃えに設定します。主に中央寄せが望ましいコンテンツで使用します。 */
}

  .d1{
    width: 100%; /* d1に属するカラムの幅を100%に表示します。 */
  }

  .d2{
    width: 49%; /* d2に属するカラムの幅を画面の幅の約半分に表示します。 */
  }

  .d3{
    width: 32%; /* d3に属するカラムの幅を画面の幅の約1/3に表示します。 */
  }

  .d4{
    width: 24%; /* d4に属するカラムの幅を画面の幅の約1/4に表示します。 */
  }

  .d5{
    width: 19%; /* d5に属するカラムの幅を画面の幅の約1/5に表示します。 */
  }


#red-box{
    background-color: #9f0940;
    border-radius: 10px;
}
#orange-box{
    background-color: #e25f13;
    border-radius: 10px;
}

#blue-box{
    background-color: #044fb1;
    border-radius: 10px;
}

#section1{
    margin-top: 32px;
}

#section3 p{
    color: var(--color4);
    text-align: center;
}
.col img{
    width:100%;
    height:auto;
    border-radius: 10px;
    margin-bottom: 10px;
}

#section5 col{
    background-color: #c9c6c6;
}




  @media screen and (max-width: 767px) {
    .col{
        width: 120%; /* 画面幅が767ピクセル以下の場合、カラムを全幅に設定します。これはモバイルデバイスでの表示を最適化するためです。 */
        margin-bottom: 16px; /* カラムの下に16ピクセルの余白を追加します。これにより、折り返し時のカラム間に適切なスペースが生まれます。 */
    }

    .m1{
        width: 100%; /* 画面幅が767ピクセル以下の場合、m1というクラスに属するカラムを全幅に設定します。これはモバイルデバイスでの表示を最適化するためです。 */
    }

    .m2{
        width: 48%; /* 画面幅が767ピクセル以下の場合、m2というクラスに属するカラムを画面の幅の約半分に表示します。これはモバイルデバイスでの表示を最適化するためです。 */
    }
  }

  footer {
    text-align: center; /* フッター内のテキストを中央揃えにします。これはフッター内容を視覚的にバランスよく表示するためです。 */
    margin-bottom: 32px; /* フッターの下に32ピクセルの余白を追加します。これにより、ページの最下部と他の要素との間に適切なスペースが確保されます。 */
  }

